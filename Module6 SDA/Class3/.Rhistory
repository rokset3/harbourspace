geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child, col='blue'), galton %>% group_by(parent) %>% summarize(avg_child = mean(child))) +
geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
#geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
#geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child, col='red', alpha=0.1)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child, col='blue'), galton %>% group_by(parent) %>% summarize(avg_child = mean(child))) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
#geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
#geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child, col='red', alpha=0.1)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child, col='blue'), galton %>% group_by(parent) %>% summarize(avg_child = mean(child))) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child, col='red', alpha=0.1)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_jitter(aes(x=parent, y=child, col='red', alpha=0.1)) +
geom_point(aes(x=parent, y=avg_child, col='blue'), galton %>% group_by(parent) %>% summarize(avg_child = mean(child))) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child, col='blue'), galton %>% group_by(parent) %>% summarize(avg_child = mean(child))) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_point(aes(x=parent, y=child, col='red', alpha=0.1)) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child, col='blue'), galton %>% group_by(parent) %>% summarize(avg_child = mean(child))) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_point(aes(x=parent, y=child), col='red', alpha=0.1) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child), galton %>% group_by(parent) %>% summarize(avg_child = mean(child)), col='blue') +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_point(aes(x=parent, y=child), col='red', alpha=0.1) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child), galton %>% group_by(parent) %>% summarize(avg_child = mean(child)), col='blue') +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child), col='red', alpha=0.1) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
geom_point(aes(x=parent, y=avg_child), galton %>% group_by(parent) %>% summarize(avg_child = mean(child)), col='blue') +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child), col='red', alpha=0.5) +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
#image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child), col='red', alpha=0.5) +
geom_point(aes(x=parent, y=avg_child), galton %>% group_by(parent) %>% summarize(avg_child = mean(child)), col='blue') +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
ggsave(file="galton_height.svg", plot=image, width=8.5, height=8.5)
image <-
galton %>%
ggplot() +
theme_light() +
xlim(61, 74) + ylim(61, 74) +
labs(x='Mid-parent', y='Child') +
geom_abline(slope=1, intercept = 0, col='grey', size=0.5) +
#geom_point(aes(x=avg_parent, y=child, col='green'), galton %>% group_by(child) %>% summarize(avg_parent = mean(parent))) +
geom_abline(slope=m1$coefficients[2], intercept = m1$coefficients[1], col='blue', size=2) +
geom_abline(slope=1/m2$coefficients[2], intercept =  - m2$coefficients[1] /m2$coefficients[2] , col='black', size=2) +
geom_jitter(aes(x=parent, y=child), col='red', alpha=0.5) +
geom_point(aes(x=parent, y=avg_child), galton %>% group_by(parent) %>% summarize(avg_child = mean(child)), col='blue') +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=17),
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_line(colour = "gray"),
panel.grid.minor = element_line(colour = "gray"),
legend.position = "none")
ggsave(file="galton_height.svg", plot=image, width=8.5, height=8.5)
install.packages(c("backports", "callr", "cli", "codetools", "colorspace", "cpp11", "data.table", "dendextend", "digest", "dplyr", "e1071", "Exact", "extraDistr", "foreach", "generics", "glue", "gplots", "heatmaply", "htmlwidgets", "httr", "iterators", "jsonlite", "KernSmooth", "knitr", "labeling", "magick", "magrittr", "MASS", "matrixStats", "maxLik", "mgcv", "nlme", "openxlsx", "pillar", "pkgbuild", "processx", "ps", "R6", "rbibutils", "remotes", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "seriation", "sf", "showtext", "stringi", "survival", "sys", "sysfonts", "systemfonts", "testthat", "tibble", "tidyr", "tinytex", "vctrs", "withr", "xfun", "zip"))
library(PropCIs)
k <- 0
n <- 543
exactci(k, n, 0.95)
k <- 1
exactci(k, n, 0.95)
diffscoreci(79, 721, 443, 1736, 0.95)
diffscoreci(79, 221, 443, 1736, 0.95)
diffscoreci(79, 271, 443, 1736, 0.95)
setwd("~/.yandex.disk/23546733/Yandex.Disk.localized/teaching/SDA/2018 Harbour Space/2_ht_parametric/problems")
source("invertCI.R")
source("invertCI.R")
CIfun <- function(CL) diffscoreci(79, 271, 443, 1736, CL)$conf.int
invertCI(CIfun, precision=8, theta0=0)
?wald2ci
wald2ci
wald2ci(79, 271, 443, 1736, 0.95, adjust='Wald')
```{r, echo=FALSE}
binom.test(11, 12, p = 0.1, alternative = "greater")
```{r, warning=FALSE}
prop.test(11, 12, conf.level=0.95)$conf.int
?scoreci
??scoreci
?scoreci(11,12)
binconf()
binconf()
binconf()
scoreci(11, 12)
library('PropCIs')
library("PropCIs")
install.packages("PropCIs")
library("PropCIs")
?scoreci
?scoreci(11, 12, 0.95)
scoreci(11, 12, 0.95)
num_successes = 11
num_experiments = 12
pi_hat = num_successes/num_experiments
p_0 = 0.1
z_statistic = (pi_hat - pi_0)/sqrt(pi_0*(1-pi_0)/num_experiments)
pi_0 = 0.1
z_statistic = (pi_hat - pi_0)/sqrt(pi_0*(1-pi_0)/num_experiments)
z_statistic
?pnorm
?rnorm
p <- 1 - pnorm(z_statistic)
p
z_statistic = (pi_hat - pi_0)/sqrt(pi_hat*(1-pi_hat)/num_experiments)
p <- 1 - pnorm(z_statistic)
p
pi_hat_gen = mean(pi_hat_2, pi_hat)
pi_hat_2 = 7/12
pi_hat_gen = mean(pi_hat_2, pi_hat)
z_twosamples = (pi_hat_2 - pi_hat)/(sqrt(pi_hat_gen(1-pi_hat_gen)*1/6))
pi_hat_gen = mean(pi_hat_2, pi_hat)
z_twosamples = (pi_hat_2 - pi_hat)/(sqrt(pi_hat_gen(1-pi_hat_gen)*1/6))
z_twosamples = (pi_hat_2 - pi_hat)/(sqrt(pi_hat_gen(1-pi_hat_gen)*1/6))
pi_hat_gen
z_twosamples = (pi_hat_2 - pi_hat)/(sqrt(pi_hat_gen(1-pi_hat_gen)*(1/6)))
z_twosamples = (pi_hat_2 - pi_hat)/(sqrt(pi_hat_gen*(1-pi_hat_gen)*(1/6)))
z_twosamples
1-pnorm(z_twosamples)
z_twosamples = (pi_hat_2 - pi_hat)/sqrt(pi_hat_gen*(1-pi_hat_gen)*(1/6))
z_twosamples
1-pnorm(z_twosamples)
ftable(err1, err2)
```{r}
data <- read.table("classifiers.txt", header=T)
err1 <- data$true.ans == data$c1.ans
err2 <- data$true.ans == data$c2.ans
ftable(err1, err2)
```
data
```
```
```
acc1<- sum(data$true.ans == data$c1.ans)
acc1<- sum(data$true.ans == data$c1.ans)
acc1<- sum(data$true.ans == data$c1.ans)
acc2<- sum(data$true.ans == data$c2.ans)
acc1
acc1<- sum(data$true.ans == data$c1.ans)/length(data)
acc2<- sum(data$true.ans == data$c2.ans)/length(data)
acc1
length(data)
acc1<- sum(data$true.ans == data$c1.ans)/length(data$true.ans)
acc2<- sum(data$true.ans == data$c2.ans)/length(data$true.ans)
acc1
acc2
f = 9
g = 21
n = length(data$true.ans)
statistic <- f-g/sqrt(f+g-(f-g)**2/n)
statistic
pnorm(stastic)
pnorm(statistic)
1 - pnorm(statistic)
2*(1 - pnorm(statistic))
n = length(data$true.ans)
f = 9
g = 21
statistic <- f-g/sqrt(f+g-((f-g)**2)/n)
2*(1 - pnorm(statistic))
library(ggplot2)
```{r echo=FALSE, message=FALSE}
library(dplyr)
library(ggplot2)
theme_set(theme_bw())
library(dplyr)
install.packages('dplyr')
install.packages('dplyr')
install.packages('ggplot2')
library(dplyr)
library(ggplot2)
theme_set(theme_bw())
```{r}
rats <- read.table("rats.txt", sep="\t", header=T)
```{r}
rats %>%
ggplot(aes(x=lifespan)) +
geom_histogram(aes(fill=diet, color=diet), alpha=0.5, position = 'identity', bins=30) +
xlab("Lifespan in days")
ggplot(aes(x=lifespan))
ggplot(aes(x=lifespan))+
geom_boxplot(data=)
ggplot(aes(x=lifespan))+
geom_boxplot() +
xlab('boxplot')
rats%>%
ggplot(aes(x=lifespan))+
geom_boxplot() +
xlab('boxplot')
rats%>%
ggplot(aes(x=lifespan))+
geom_boxplot() +
xlab('boxplot')
rats%>%
ggplot(aes(x=lifespan~diet))+
geom_boxplot() +
xlab('boxplot')
rats%>%
ggplot(x=lifespan~diet)+
geom_boxplot() +
xlab('boxplot')
rats%>%
ggplot(aes(x=lifespan))+
geom_boxplot(aes(fill=diet)) +
xlab('boxplot')
rats%>%
ggplot(aes(x=lifespan))+
geom_boxplot(aes(fill=diet, color=diet)) +
xlab('boxplot')
rats%>%
ggplot(aes(x=lifespan, y=diet))+
geom_boxplot(aes(fill=diet, color=diet)) +
xlab('boxplot')
```{r, fig.height=5, fig.width=5}
rats %>%
ggplot(aes(sample = lifespan, colour = diet)) +
stat_qq() +
stat_qq_line()
rats %>%
ggplot(aes(sample = lifespan, colour = diet)) +
stat_qq() +
stat_qq_line()
data
rats
rat_cleaned<-rats[rats$lifespan>=400]
rat%>%
filter(lifespan >= 400)
rats%>%
filter(lifespan >= 400)
ggplot(aes(sample = lifespan, colour = diet)) +
stat_qq() +
stat_qq_line()
rats%>%
filter(lifespan >= 400)
ggplot(aes(sample = lifespan, colour = diet)) +
stat_qq() +
stat_qq_line()
rats%>%
filter(lifespan >= 400) +
ggplot(aes(sample = lifespan, colour = diet)) +
stat_qq() +
stat_qq_line()
rats%>%
rats<-filter(lifespan >= 400)
View(rats)
rats%>%
filter(lifespan >= 400)
length(rats)
length(rats$lifespan)
rats_filtered <- rats%>%
filter(lifespan>400)
library('PropCI')
library('PropCIs')
rats_filtered%>%
filter(diet=='restricted')
t.test(rats_filtered$lifespan[rats_filtered$diet =='restricted'],
rats_filtered$lifespan[rats_filtered$diet =='ad libitum'])
t.test(rats$lifespan[rats$diet =='restricted'],
rats$lifespan[rats$diet =='ad libitum'])
library(dplyr)
library(ggplot2)
theme_set(theme_bw())
speed <- scan("speed.txt")
ggplot() +
aes(x=speed) +
geom_histogram(color='black', fill='red', bins=30) +
xlab('Measured speed of light, km/h')
data.frame(x=speed) %>%
ggplot(aes(x=x)) +
stat_ecdf(col='blue') +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
data.frame(x=speed) %>%
ggplot(aes(x=x))+
geom_density() +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
?geom_density
data.frame(x=speed) %>%
ggplot(aes(x=x))+
geom_density(x=speed) +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
data.frame(x=speed) %>%
ggplot(aes(x=x))+
geom_density(x=x) +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
data.frame(x=speed) %>%
ggplot(aes(x=x))+
geom_density() +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
geom_density(, col='blue) +
geom_density( col='blue) +
data.frame(x=speed) %>%
ggplot(aes(x=x))+
geom_density(col='blue') +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
data.frame(x=speed) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = pnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
data %>%
ggplot(aes(sample = speed)) +
stat_qq() +
stat_qq_line()
data %>%
ggplot(aes(x=speed)) +
stat_qq() +
stat_qq_line()
data.frame(x=speed) %>%
ggplot(aes(x=speed)) +
stat_qq() +
stat_qq_line()
data.frame(x=speed) %>%
ggplot(aes(x=x)) +
stat_qq() +
stat_qq_line()
data.frame(x=speed) %>%
ggplot(aes(sample=lifespan)) +
stat_qq() +
stat_qq_line()
data.frame(x=speed) %>%
ggplot(aes(sample=speed)) +
stat_qq() +
stat_qq_line()
shapiro.test(data.frame(x=speed)$x)
data.frame(x=speed) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(speed), sd=sd(speed)), col='red')  +
xlab('Measured speed of light, km/h') +
ylab('Empirical and fitted normal\ndistribution functions')
---
title: "Methylphenidate for ADHD"
What is the effect of the drug?
```{r echo=FALSE, message=FALSE}
library(dplyr)
library(ggplot2)
theme_set(theme_bw())
att <- read.table("ADHD.txt", header=T)
```{r, fig.height=5, fig.width=5}
att <- read.table("ADHD.txt", header=T)
att %>%
ggplot(aes(x=D0, y=D60)) +
geom_point() +
geom_abline(slope=1, intercept = 0, col='red') +
xlim(0,100) + ylim(0,100) +
xlab('Placebo') + ylab('Methylphenidate')
```{r, fig.height=5, fig.width=5}
att
?t.test
t.test(att$D0, att$D60, paired=TRUE)
