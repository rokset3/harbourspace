summary(m6)
par(mfrow=c(2,2))
data
qqnorm(residuals(m6))
qqline(residuals(m6), col="red")
grid()
plot(data$x, rstandard(m6), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x, rstandard(m6))
grid()
plot(data_2$y, rstandard(m6), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$y, rstandard(m6))
grid()
plot(data_2$z, rstandard(m6), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$z, rstandard(m6))
grid()
par(mfrow=c(2,2))
qqnorm(residuals(m6))
qqline(residuals(m6), col="red")
grid()
plot(data_2$x, rstandard(m6), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data-2$x, rstandard(m6))
par(mfrow=c(2,2))
qqnorm(residuals(m6))
qqline(residuals(m6), col="red")
grid()
plot(data_2$x, rstandard(m6), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$x, rstandard(m6))
grid()
plot(data_2$y, rstandard(m6), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$y, rstandard(m6))
grid()
plot(data_2$z, rstandard(m6), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$z, rstandard(m6))
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(0,max(excluded_data$logprice)), ylim=c(0,3))
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(0,max(excluded_data$logprice)), ylim=c(0,3))
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
#xlim=c(0,max(excluded_data$logprice)), ylim=c(0,3)
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(0,max(data_cooks$logprice))
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(0,max(data_cooks$logprice)), ylim=c(0,15)
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(0,max(data_cooks$logprice)), ylim=c(0,10)
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(6,max(data_cooks$logprice)), ylim=c(6,10)
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks$logprice,max(data_cooks$logprice)),
ylim=c(min(data_cooks$logprice,max(data_cooks$logprice))
)
lines(c(0,10), c(0,10), col="red")
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks$logprice,max(data_cooks$logprice)), ylim=c(min(data_cooks$logprice,max(data_cooks$logprice))
)
lines(c(0,10), c(0,10), col="red")
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks$logprice,max(data_cooks$logprice)), ylim=c(min(data_cooks$logprice,max(data_cooks$logprice))
lines(c(0,10), c(0,10), col="red")
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(6,max(data_cooks$logprice)), ylim=c(6,10)
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks$logprice),max(data_cooks$logprice)),
ylim=c(min(data_cooks$logprice),max(data_cooks$logprice))
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m5, excluded_data), col="red", pch=19)
grid()
m7 <- lm(logprice ~ . + I(x^2) + I(y^2) + I(z^2) , data=data_2)
par(mfrow=c(2,2))
qqnorm(residuals(m2))
qqline(residuals(m2), col="red")
grid()
plot(data_2$x, rstandard(m7), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$x, rstandard(m7))
grid()
plot(data_2$x^2, rstandard(m7), xlab="x^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$x^2, rstandard(m7))
grid()
plot(data_2$y, rstandard(m7), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$y, rstandard(m7))
grid()
plot(data_2$y^2, rstandard(m7), xlab="y^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$y^2, rstandard(m7))
grid()
plot(data_2$z, rstandard(m7), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$z, rstandard(m7))
grid()
plot(data_2$z^2, rstandard(m7), xlab="z^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$z^2, rstandard(m7))
grid()
shapiro.test(residuals(m7))$p.value
shapiro.test(residuals(m7))[1:5000]$p.value
shapiro.test(residuals(m7)[1:5000])$p.value
bptest(m7)$p.value
ad.test(residuals(m7))$p.value
s7 <-summary(m7)
s7$coefficients <- cbind(s7$coefficients, mycoeftest(m7, "HC0"))
dimnames(s7$coefficients)[[2]][5] <- "Adjusted p-value"
print(s7)
waldtest(m6, m7, vcov = vcovHC(m6, type = "HC0"))
waldtest(m6, m7, vcov = vcovHC(m6, type = "HC0"))
waldtest(m6, m7, vcov = vcovHC(m7, type = "HC0"))
m8 <- lm(logprice ~ cut + color + clarity+ depth + table + x + size + I(x^2) , data=data_2)
waldtest(m7, m8, vcov = vcovHC(m7, type = "HC0"))
par(mfrow=c(1,2))
plot(fitted(m7), cooks.distance(m7), xlab="Fitted log price", ylab="Cook's distance", col=mycol, pch=19)
lines(c(-100,100), c(0.015, 0.015), col="red")
plot(data$logprice, cooks.distance(m7), xlab="Log price", ylab="Cook's distance", col=mycol, pch=19)
lines(c(-100,100), c(0.015, 0.015), col="red")
excluded_data_2 <- rbind(data_2, data_2[cooks.distance(m7)>0.015,])
data_cooks_2 <-data_2[cooks.distance(m7)<=0.015,]
m9 <- lm(logprice ~ . + I(x^2) + I(y^2) + I(z^2)  , data=data_cooks_2)
res <- cbind(coefficients(m7), coefficients(m9))
colnames(res) <- c("All data", "Filtered data")
res
par(mfrow=c(1,1))
plot(data_cooks_2$logprice, fitted(m9), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks_2$logprice),max(data_cooks_2$logprice)),
ylim=c(min(data_cooks_2$logprice),max(data_cooks_2$logprice))
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data_2$logprice, predict(m9, excluded_data_2), col="red", pch=19)
grid()
jtest(m9, m5, vcov = vcovHC(m5, type = "HC0"))
jtest(m9, m5)
jtest(m9, m5)
s5
summary(m5)
round(100*summary(m5)$r.squared)
100*summary(m5)$r.squared
100*summary(m5)$r.squared
100*summary(m9)$r.squared
library(lattice)
library(MASS)
library(sandwich)
library(mvtnorm)
library(car)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(GGally)
library(comprehenr)
library(readxl)
library(nortest)
library(lmtest)
theme_set(theme_bw())
mycol <- rgb(30,30,30,100,maxColorValue=255)
addtrend <- function(x, y){
y <- y[order(x)]
x <- sort(x)
lines(x, predict(loess(y ~ x)), col = "red")
}
mycoeftest <- function(m, EstType){
beta  <- coef(m)[-1]
Vbeta <- vcovHC(m, type = EstType)[-1,-1]
D <- diag(1 / sqrt(diag(Vbeta)))
t <- D %*% beta
Cor <- D %*% Vbeta %*% t(D)
if (EstType == "const"){
m.df <- length(m$residuals) - length(beta)
}else{
m.df=Inf
}
p_adj <- sapply(abs(t), function(x) 1-pmvt(-rep(x, length(beta)), rep(x, length(beta)), corr = Cor, df = m.df))
c(NaN, p_adj)
}
setwd('C:\\Users\\Temirlan\\Desktop\\HarbourSpace\\Module6 SDA\\ass3')
raw_data <-read_excel('diamonds.xlsx')
summary(raw_data)
boxplot(raw_data$carat)
boxplot(raw_data$x)
boxplot(raw_data$y)
boxplot(raw_data$z)
boxplot(raw_data$x)
raw_data <-read_excel('diamonds.xlsx')
summary(raw_data)
boxplot(raw_data$x)
raw_data<-filter(raw_data,
y<30,
z<25,
x>0)
raw_data
boxplot(raw_data$price)
raw_data
boxplot(raw_data$depth)
raw_data
boxplot(raw_data$carat)
data<-raw_data
data$size <- ifelse(data$carat < 0.3 , "small",
ifelse(data$carat> 1, "large", "medium"))
data_2 <- subset(data, select=-c(carat))
data<- subset(data, select=-c(size))
head(data, 5)
data %>%
ggpairs(mapping = aes(alpha=0.5, fill='red'))
g1 <- data %>%
ggplot(aes(x=price)) +
geom_histogram(fill='red', col='black', bins=50)
g2 <- data %>%
ggplot(aes(x=log(price))) +
geom_histogram(fill='red', col='black', bins=50)
grid.arrange(g1, g2, nrow=1)
par(mfrow=c(1,1))
boxcox(lm(price~., data=data))
data$logprice <- log(data$price)
data$price <- NULL
head(data)
g1 <- data %>%
ggplot(aes(x=carat)) +
geom_histogram(fill='red', col='black', bins=50)
g2 <- data %>%
ggplot(aes(x=log(carat))) +
geom_histogram(fill='red', col='black', bins=50)
grid.arrange(g1, g2, nrow=1)
par(mfrow=c(1,1))
boxcox(lm(carat~., data=data))
boxcox(lm(carat~., data=data))
b <- boxcox(lm(carat ~ data=data))
b <- boxcox(lm(carat ~ ,data=data))
b <- boxcox(lm(carat ~. ,data=data))
lambda <- b$carat[which.max(b$y)]
lambda
lambda <- b$carat[which.max(b$carat)]
lambda
b
lambda <- b$x[which.max(b$y)]
lambda
par(mfrow=c(1,1))
boxcox(lm(carat~., data=data))
b <- boxcox(lm(carat ~. ,data=data))
lambda <- b$x[which.max(b$y)]
lambda
data$carat_transformed <- (data$carat ^ lambda - 1) / lambda
data$carat <- NULL
data$logcarat <- log(data$carat)
m1 <- lm(logprice ~., data=data)
summary(m1)
par(mfrow=c(2,2))
data
qqnorm(residuals(m1))
qqline(residuals(m1), col="red")
grid()
plot(data$logcarat, rstandard(m1), xlab="logcarat", ylab="Standardized residuals", col=mycol, pch=19)
par(mfrow=c(1,1))
b <- boxcox(lm(carat ~. ,data=data))
data<-raw_data
data$size <- ifelse(data$carat < 0.3 , "small",
ifelse(data$carat> 1, "large", "medium"))
data_2 <- subset(data, select=-c(carat))
data<- subset(data, select=-c(size))
head(data, 5)
data$logprice <- log(data$price)
data$price <- NULL
head(data)
par(mfrow=c(1,1))
b <- boxcox(lm(carat ~. ,data=data))
lambda <- b$x[which.max(b$y)]
lambda
data$logcarat <- (data$carat ^ lambda - 1) / lambda
data$carat <- NULL
m1 <- lm(logprice ~., data=data)
summary(m1)
par(mfrow=c(2,2))
data
qqnorm(residuals(m1))
qqline(residuals(m1), col="red")
grid()
plot(data$logcarat, rstandard(m1), xlab="logcarat", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$logcarat, rstandard(m1))
grid()
plot(data$x, rstandard(m1), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x, rstandard(m1))
grid()
plot(data$y, rstandard(m1), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$y, rstandard(m1))
grid()
plot(data$z, rstandard(m1), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$z, rstandard(m1))
grid()
m2 <- lm(logprice ~ . + I(x^2) + I(y^2) + I(z^2) + I(logcarat^2) , data=data)
par(mfrow=c(2,2))
qqnorm(residuals(m2))
qqline(residuals(m2), col="red")
grid()
plot(data$logcarat, rstandard(m2), xlab="logCarat", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$logcarat, rstandard(m2))
grid()
plot(data$logcarat^2, rstandard(m2), xlab="logCarat^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$logcarat^2, rstandard(m2))
grid()
plot(data$x, rstandard(m2), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x, rstandard(m2))
grid()
plot(data$x^2, rstandard(m2), xlab="x^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x^2, rstandard(m2))
grid()
plot(data$y, rstandard(m2), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$y, rstandard(m2))
grid()
plot(data$y^2, rstandard(m2), xlab="y^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$y^2, rstandard(m2))
grid()
plot(data$z, rstandard(m2), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$z, rstandard(m2))
grid()
plot(data$z^2, rstandard(m2), xlab="z^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$z^2, rstandard(m2))
grid()
s2 <-summary(m2)
s2$coefficients <- cbind(s2$coefficients, mycoeftest(m2, "HC0"))
s2 <-summary(m2)
s2$coefficients <- cbind(s2$coefficients, mycoeftest(m2, "HC0"))
dimnames(s2$coefficients)[[2]][5] <- "Adjusted p-value"
print(s2)
m3 <- lm(logprice ~ cut + color + clarity + depth + x + y + z + logcarat + I(x^2)+ I(y^2)+ I(z^2),
data=data)
s3 <- summary(m3)
par(mfrow=c(2,2))
qqnorm(residuals(m3))
qqline(residuals(m3), col="red")
grid()
plot(data$logcarat, rstandard(m3), xlab="logCarat", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$logcarat, rstandard(m3))
grid()
plot(data$x, rstandard(m3), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x, rstandard(m3))
grid()
plot(data$x^2, rstandard(m3), xlab="x^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x^2, rstandard(m3))
grid()
plot(data$y, rstandard(m3), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$x, rstandard(m3))
grid()
plot(data$y^2, rstandard(m3), xlab="y^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$y^2, rstandard(m3))
grid()
plot(data$z, rstandard(m3), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$z, rstandard(m3))
grid()
plot(data$z^2, rstandard(m3), xlab="z^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data$z^2, rstandard(m3))
grid()
add1(m3, ~ .^2, test="F")
waldtest(m2, m3, vcov = vcovHC(m2, type = "HC0"))
waldtest(m1, m2, vcov = vcovHC(m1, type = "HC0"))
waldtest(m1, m2, vcov = vcovHC(m2, type = "HC0"))
waldtest(m3, m2, vcov = vcovHC(m2, type = "HC0"))
par(mfrow=c(1,2))
plot(fitted(m3), cooks.distance(m3), xlab="Fitted log price", ylab="Cook's distance", col=mycol, pch=19)
lines(c(-100,100), c(0.015, 0.015), col="red")
plot(data$logprice, cooks.distance(m3), xlab="Log price", ylab="Cook's distance", col=mycol, pch=19)
lines(c(-100,100), c(0.015, 0.015), col="red")
excluded_data <- rbind(data, data[cooks.distance(m3)>0.005,])
data_cooks <-data[cooks.distance(m3)<=0.005,]
m4 <- lm(logprice ~ cut + color + clarity + depth + x + y + z + logcarat + I(x^2)+ I(y^2)+ I(z^2),
data=data_cooks)
res <- cbind(coefficients(m3), coefficients(m4))
colnames(res) <- c("All data", "Filtered data")
res
par(mfrow=c(2,2))
qqnorm(residuals(m4))
qqline(residuals(m4), col="red")
grid()
plot(data_cooks$logcarat, rstandard(m4), xlab="logCarat", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$logcarat, rstandard(m4))
grid()
plot(data_cooks$x, rstandard(m4), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$x, rstandard(m4))
grid()
plot(data_cooks$x^2, rstandard(m4), xlab="x^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$x^2, rstandard(m4))
grid()
plot(data_cooks$y, rstandard(m4), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$y, rstandard(m4))
grid()
plot(data_cooks$y^2, rstandard(m4), xlab="y^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$y^2, rstandard(m4))
grid()
plot(data_cooks$z, rstandard(m4), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$z, rstandard(m4))
grid()
plot(data_cooks$z^2, rstandard(m4), xlab="z^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_cooks$z^2, rstandard(m4))
grid()
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m5), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks$logprice),max(data_cooks$logprice)),
ylim=c(min(data_cooks$logprice),max(data_cooks$logprice))
)
par(mfrow=c(1,1))
plot(data_cooks$logprice, fitted(m4), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks$logprice),max(data_cooks$logprice)),
ylim=c(min(data_cooks$logprice),max(data_cooks$logprice))
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data$logprice, predict(m4, excluded_data), col="red", pch=19)
grid()
data_2 <- data_cooks
data_2$size <- ifelse(data_2$carat < 0.3 , "small",
ifelse(data_2$carat> 1, "large", "medium"))
data_2 <- data_cooks
data_2$size <- ifelse(exp(data_2$logcarat) < 0.3 , "small",
ifelse(exp(data_2$logcarat)> 1, "large", "medium"))
data_2$logcarat <- NULL
data_2$logprice <- log(data_2$price)
data_2
data
data<-raw_data
data$size <- ifelse(data$carat < 0.3 , "small",
ifelse(data$carat> 1, "large", "medium"))
data_2 <- subset(data, select=-c(carat))
data<- subset(data, select=-c(size))
head(data, 5)
m5 <- lm(logprice ~ cut + color + clarity + depth + x + y + z + size + I(x^2)+ I(y^2)+ I(z^2),
data=data_2)
data_2$logprice <- log(data_2$price)
data_2$price <- NULL
m5 <- lm(logprice ~ cut + color + clarity + depth + x + y + z + size + I(x^2)+ I(y^2)+ I(z^2),
data=data_2)
par(mfrow=c(2,2))
qqnorm(residuals(m5))
qqline(residuals(m5), col="red")
grid()
plot(data_2$x, rstandard(m5), xlab="x", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$x, rstandard(m5))
grid()
plot(data_2$x^2, rstandard(m5), xlab="x^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$x^2, rstandard(m5))
grid()
plot(data_2$y, rstandard(m5), xlab="y", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$y, rstandard(m5))
grid()
plot(data_2$y^2, rstandard(m5), xlab="y^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$y^2, rstandard(m5))
grid()
plot(data_2$z, rstandard(m5), xlab="z", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$z, rstandard(m5))
grid()
plot(data_2$z^2, rstandard(m5), xlab="z^2", ylab="Standardized residuals", col=mycol, pch=19)
addtrend(data_2$z^2, rstandard(m5))
grid()
par(mfrow=c(1,2))
plot(fitted(m5), cooks.distance(m5), xlab="Fitted log price", ylab="Cook's distance", col=mycol, pch=19)
lines(c(-100,100), c(0.015, 0.015), col="red")
plot(data_2$logprice, cooks.distance(m5), xlab="Log price", ylab="Cook's distance", col=mycol, pch=19)
lines(c(-100,100), c(0.015, 0.015), col="red")
excluded_data_2 <- rbind(data_2, data_2[cooks.distance(m5)>0.005,])
data_cooks_2 <-data_2[cooks.distance(m5)<=0.005,]
m6 <- lm(logprice ~ cut + color + clarity + depth + x + y + z + size + I(x^2)+ I(y^2)+ I(z^2),
data=data_cooks_2)
res <- cbind(coefficients(m5), coefficients(m6))
colnames(res) <- c("All data", "Filtered data")
res
par(mfrow=c(1,1))
plot(data_cooks_2$logprice, fitted(m6), xlab="Log price", ylab="Predicted log price", pch=19, col=mycol,
xlim=c(min(data_cooks_2$logprice),max(data_cooks_2$logprice)),
ylim=c(min(data_cooks_2$logprice),max(data_cooks_2$logprice))
)
lines(c(0,10), c(0,10), col="red")
points(excluded_data_2$logprice, predict(m6, excluded_data_2), col="red", pch=19)
grid()
jtest(m6, m5)
summary(m6)$r.squared
summary(m4)$r.squared
summary(m6)$r.squared
summary(m4)$r.squared
summary(m4)$r.squared - summary(m6)$r.squared
data_2
