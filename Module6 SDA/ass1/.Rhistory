for (i in 1:1000){
means[i] <- mean(sample(x=sample, size=n))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(sample(x=sample, size=n))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-50
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(sample(x=sample, size=n))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-50
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-50
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-50
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=mean(means), sd=sd(means)), col='red')
n<-50
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=1, sd=0), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=1, sd=0), col='red')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0 sd=1), col='red')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')
library(dplyr)
sample<- rnorm(n=100, mean=0, sd=1)
library(ggplot2)
ggplot()+
aes(x=sample)+
geom_histogram(color='black', fill='red', bins=30)+
xlab('100 samples from standard normal distribution')
data.frame(x=sample) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')  +
xlab('Sample data')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=1, sd=0), col='red')
means
mean(means)
sd(means)
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=1, sd=0), col='red')
sd(means)
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=1, sd=0), col='red')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
sd_sample <- 1/n
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
var_sample <-1/n
sd_sample <- sqrt(var_sample)
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
var_sample <-1/n
sd_sample <- sqrt(var_sample)
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
```{r}
library(dplyr)
sample<- rnorm(n=100, mean=0, sd=1)
library(dplyr)
sample<- rnorm(n=100, mean=0, sd=1)
library(ggplot2)
ggplot()+
aes(x=sample)+
geom_histogram(color='black', fill='red', bins=30)+
xlab('100 samples from standard normal distribution')
data.frame(x=sample) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=1), col='red')  +
xlab('Sample data')
#plot of the histogram, kernel density estimate and a normal approximation from CLT to compare
n<-5
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
var_sample <-1/n
sd_sample <- sqrt(var_sample)
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
n<-10
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
var_sample <-1/n
sd_sample <- sqrt(var_sample)
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
n<-50
times <-1000
means<- rep(0, times)
length(1:1000)
for (i in 1:1000){
means[i] <- mean(rnorm(n=n, mean=0, sd=1))
}
var_sample <-1/n
sd_sample <- sqrt(var_sample)
ggplot()+
aes(x=means)+
geom_histogram()
data.frame(x=means) %>%
ggplot(aes(sample=means)) +
stat_qq() +
stat_qq_line()
data.frame(x=means) %>%
ggplot(aes(x=x)) +
geom_density(col='blue') +
stat_function(fun = dnorm, args = list(mean=0, sd=sd_sample), col='red')
